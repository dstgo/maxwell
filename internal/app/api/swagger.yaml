basePath: /api/
definitions:
  auth.LoginOption:
    properties:
      password:
        description: user password
        type: string
      remember:
        description: remember user or not
        type: boolean
      username:
        description: username or email
        type: string
    required:
    - password
    - username
    type: object
  auth.RefreshTokenOption:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    required:
    - accessToken
    - refreshToken
    type: object
  auth.RegisterOption:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - code
    - password
    - username
    type: object
  auth.ResetPasswordOption:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - code
    - password
    type: object
  auth.TokenResult:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  auth.Usage:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - UsageUnknown
    - UsageRegister
    - UsageReset
  auth.VerifyCodeOption:
    properties:
      to:
        type: string
      usage:
        $ref: '#/definitions/auth.Usage'
    required:
    - usage
    type: object
  types.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      msg:
        type: string
    type: object
info:
  contact:
    name: dstgo
    url: https://github.com/dstgo/maxwell
  description: This is maxwell swagger generated api documentation, know more information
    about maxwell on GitHub.
  license:
    name: MIT LICENSE
    url: https://mit-license.org/
  title: MaxWell HTTP API
  version: v0.0.0Beta
paths:
  /auth/code:
    post:
      consumes:
      - application/json
      description: send verification code mail to specified email address
      parameters:
      - description: VerifyCodeOption
        in: body
        name: VerifyCodeOption
        required: true
        schema:
          $ref: '#/definitions/auth.VerifyCodeOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: VerifyCode
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: login with password, and returns jwt token pair
      parameters:
      - description: login params
        in: body
        name: loginOption
        required: true
        schema:
          $ref: '#/definitions/auth.LoginOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.TokenResult'
              type: object
      summary: Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: ask for refresh token lifetime
      parameters:
      - description: refresh params
        in: body
        name: RefreshTokenOption
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshTokenOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.TokenResult'
              type: object
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register a new user with verification code
      parameters:
      - description: register params
        in: body
        name: RegisterOption
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: Register
      tags:
      - auth
  /auth/reset:
    post:
      consumes:
      - application/json
      description: reset user password with verification code
      parameters:
      - description: reset params
        in: body
        name: ResetPasswordOption
        required: true
        schema:
          $ref: '#/definitions/auth.ResetPasswordOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: ResetPassword
      tags:
      - auth
  /ping:
    get:
      consumes:
      - application/json
      description: test server if is available
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Ping
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
